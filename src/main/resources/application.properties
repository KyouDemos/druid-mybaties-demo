### Spring工程设置
logging.level.root=info
logging.level.cn.ok.demos=debug
# spring项目美化打印
spring.jackson.serialization.indent_output=true
### Druid 监控Servlet配置
# 如果allow没有配置或者为空，则允许所有访问
spring.datasource.druid.stat-view-servlet.allow=
# deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝。
spring.datasource.druid.stat-view-servlet.deny=
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.login-password=admin
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.reset-enable=true
### Druid 过滤器配置
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true
### Druid 数据源配置 -- CCM
# Druid会自动跟url识别驱动类名，如果连接的数据库非常见数据库，配置属性driverClassName
spring.datasource.druid.url=jdbc:mysql://localhost:3306/mydb?characterEncoding=utf8&useSSL=true
spring.datasource.druid.username=root
spring.datasource.druid.password=654321`w?
# 连接池初始化大小
spring.datasource.druid.initial-size=1
# 连接池最小连接数
spring.datasource.druid.min-idle=1
# 连接池最大连接数
spring.datasource.druid.max-active=5
# asyncInit是1.1.4中新增加的配置，如果有initialSize数量较多时，打开会加快应用启动时间
spring.datasource.druid.async-init=true
# 获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=30000
# 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
# 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
spring.datasource.druid.validation-query=select 'x'
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能
spring.datasource.druid.filter.stat.merge-sql=true
# 记录慢SQL的配置（超过1秒）
spring.datasource.druid.filter.stat.slow-sql-millis=1000
spring.datasource.druid.filter.stat.log-slow-sql=true
### 第二数据源配置
# Druid会自动跟url识别驱动类名，如果连接的数据库非常见数据库，配置属性driverClassName
spring.datasource.druid.mydb2.url=jdbc:mysql://localhost:3306/mydb2?characterEncoding=utf8&useSSL=true
spring.datasource.druid.mydb2.username=root
spring.datasource.druid.mydb2.password=654321`w?
# 连接池初始化大小
spring.datasource.druid.mydb2.initial-size=1
# 连接池最小连接数
spring.datasource.druid.mydb2.min-idle=1
# 连接池最大连接数
spring.datasource.druid.mydb2.max-active=5
# asyncInit是1.1.4中新增加的配置，如果有initialSize数量较多时，打开会加快应用启动时间
spring.datasource.druid.mydb2.async-init=true
# 获取连接等待超时的时间
spring.datasource.druid.mydb2.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.mydb2.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.mydb2.min-evictable-idle-time-millis=30000
# 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
# 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
spring.datasource.druid.mydb2.validation-query=select 'x'
spring.datasource.druid.mydb2.test-while-idle=true
spring.datasource.druid.mydb2.test-on-borrow=false
spring.datasource.druid.mydb2.test-on-return=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.mydb2.pool-prepared-statements=true
spring.datasource.druid.mydb2.max-pool-prepared-statement-per-connection-size=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.mydb2.filters=stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能
spring.datasource.druid.mydb2.filter.stat.merge-sql=true
# 记录慢SQL的配置（超过1秒）
spring.datasource.druid.mydb2.filter.stat.slow-sql-millis=1000
spring.datasource.druid.mydb2.filter.stat.log-slow-sql=true
### 每次程序启动，都初始化数据库。
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.open-in-view=true
spring.jpa.show-sql=false
